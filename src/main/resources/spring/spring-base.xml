<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.2.xsd  
           http://www.springframework.org/schema/tx
 		   http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           ">
<!--  启用注解 使得 @autowear注解起作用 自动扫描的包名 -->  
    <context:component-scan base-package="com.**.service"/>
<!--数据库连接参数配置-->       
    <context:property-placeholder location="classpath:db.properties" />
    
    <bean id="jdbcDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
          <property name="driverClassName" value="${jdbc.driver}" />
          <property name="url" value="${jdbc.url}" />
          <property name="username" value="${jdbc.username}" />
          <property name="password" value="${jdbc.password}" />
          <!--连接池初始值-->
       	  <property name="initialSize" value="10"/>
          <!-- 同一时间可以从池分配的最多连接数量。设置为0时表示无限制。 -->
          <property name="maxActive" value="30"/>
          <!-- 池里不会被释放的最多空闲连接数量。设置为0时表示无限制。 -->
	      <property name="maxIdle" value="20"/>
	      <!-- 在不新建连接的条件下，池中保持空闲的最少连接数。 -->
	      <property name="minIdle" value="3"/>
	      <!-- 设置自动回收超时连接 -->  
	      <property name="removeAbandoned" value="true" />
	      <!-- 自动回收超时时间(以秒数为单位) -->  
	      <property name="removeAbandonedTimeout" value="200"/>
	      <!-- 设置在自动回收超时连接的时候打印连接的超时错误  --> 
	      <property name="logAbandoned" value="true"/>
	      <!-- 等待超时以毫秒为单位，在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时）。设置为-1表示无限等待。  -->  
	      <property name="maxWait" value="100"/> 
    </bean>
    <!--spring管理事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="jdbcDataSource" />
    </bean>
    <!--可通过注解控制事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />
    
<!--配置MyBatis数据源-->    
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
    <property name="dataSource" ref="jdbcDataSource" />
    <!--mybatis全局配置文件，必须加，否则分页拦截不起作用-->  
    <property name="configLocation" value="classpath:mybatis-config.xml" />  
    <!--加载所有的mapper文件 -->
    <property name="mapperLocations">
    	<list>
    	<value>classpath:com/junyang/oa/dao/mapper/*.xml</value>
    	<value>classpath:com/junyang/security/dao/mapper/*.xml</value>
    	</list>
    </property>
</bean>
<!-- 自动扫描mapper接口,交给spring容器管理 -->  
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!--扫描mapper对应接口路径-->  
    <property name="basePackage" value="com.junyang.**.dao" />
    <property name="sqlSessionFactoryBeanName" value = "sqlSessionFactory" /> 
</bean>
</beans>