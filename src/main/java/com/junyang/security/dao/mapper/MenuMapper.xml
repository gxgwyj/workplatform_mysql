<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.junyang.security.dao.MenuMapper">
    <resultMap type="com.junyang.security.model.Menu" id="mMenu">
       <id column="M_ID" property="id"/>
       <result column="M_NAME" property="name"/>  
       <result column="M_TITLE" property="title"/>  
       <result column="M_ICON" property="icon"/>
       <result column="M_PID" property="pid"/>
       <result column="M_URL" property="url"/>
       <result column="STATE" property="state"/>
       <result column="IS_LEAF" property="isLeaf"/>
       <result column="M_CODE" property="mcode"/>
    </resultMap>
    
    <resultMap type="com.junyang.security.vo.MenuVo" id="mMenuVo">
       <id column="M_ID" property="id"/>
       <result column="M_NAME" property="name"/>  
       <result column="M_TITLE" property="title"/>  
       <result column="M_ICON" property="icon"/>
       <result column="M_PID" property="pid"/>
       <result column="M_URL" property="url"/>
       <result column="STATE" property="state"/>
       <result column="P_NAME" property="pName"/>
       <result column="IS_LEAF" property="isLeaf"/>
       <result column="M_CODE" property="mcode"/>
    </resultMap>
    
    <!--保存Menu-->
    <insert id="insertMenu" parameterType="com.junyang.security.model.Menu" >
      <!--使用javaUUID作为主键，使用ognl表达式（这个方法比较模糊）-->
      <bind name="javaUUID" value="@com.junyang.common.util.PrimaryKeyManager@getPrimaryKey()"/>
      INSERT INTO T_MENU (M_ID,M_NAME,M_TITLE,M_ICON,M_PID,M_URL,STATE,IS_LEAF,M_CODE) VALUES(#{javaUUID,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR},#{icon,jdbcType=VARCHAR},#{pid,jdbcType=VARCHAR},#{url,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{isLeaf,jdbcType=VARCHAR},#{mcode,jdbcType=VARCHAR})
    </insert>
    <!--修改Menu-->
    <update id="updateMenu" parameterType="com.junyang.security.model.Menu" >
      UPDATE T_MENU SET M_NAME=#{name},M_TITLE=#{title},M_ICON=#{icon},M_PID=#{pid},STATE=#{state},M_URL=#{url},M_CODE=#{mcode},IS_LEAF=#{isLeaf} 
      WHERE M_ID=#{id}
    </update> 
    <!--查询所有的Menu-->
    <select id="selectMenus" resultMap="mMenu">
    SELECT * FROM T_MENU
    </select>
    <!--根据id查询某一个Menu-->
    <select id="selectMenu" resultMap="mMenu" parameterType="string">
    SELECT * FROM T_MENU WHERE M_ID=#{0}
    </select>   
    <delete id="deleteMenu" parameterType="string">
      DELETE FROM T_MENU WHERE M_ID=#{0}
    </delete>
    <update id="updateByPrimaryKeySelective" parameterType="com.junyang.security.model.Menu" >
    update T_MENU
    <set >
      <if test="id != null" >
        M_ID = #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        M_NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        M_TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        M_ICON = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        M_PID = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        M_URL = #{url,jdbcType=VARCHAR},
      </if>
       <if test="isLeaf != null" >
        IS_LEAF = #{isLeaf,jdbcType=VARCHAR},
      </if>
       <if test="mcode != null" >
        M_CODE = #{mcode,jdbcType=VARCHAR},
      </if>
    </set>
    where M_ID = #{id,jdbcType=VARCHAR}
  </update>    
  <select id="selectMenuVo" parameterType="string" resultMap="mMenuVo">
     	SELECT 
	       T1.M_ID AS M_ID,
	       T1.M_NAME AS M_NAME,
	       T1.M_TITLE AS M_TITLE,
	       T1.M_ICON  AS M_ICON,
	       T1.M_PID  AS M_PID,
	       T1.STATE AS STATE,
	       T1.M_URL AS M_URL,
	       T2.M_NAME AS P_NAME,
	       T1.IS_LEAF AS IS_LEAF,
	       T1.M_CODE AS M_CODE
       FROM T_MENU T1
       LEFT JOIN T_MENU T2  ON T1.M_PID=T2.M_ID
       where t1.M_ID = #{0}
  </select>
    <select id="selectTreeNodesByRoleId" parameterType="string" resultType="com.junyang.common.model.tree.TreeNode">
     	select 
  			t1.m_id  as id,
  			t1.m_pid as pid,
  			t1.m_name as name,
  			nvl2(t2.p_mid,1,0)  as checked
 		from t_menu t1
  		left join (select * from t_privilege  where P_MASTER='role'  and P_MASTERVALUE=#{0}) t2 on t1.m_id = t2.p_mid
   </select>
   <select id="selectRoleMenuIdsByRoleId" parameterType="string" resultType="java.lang.String">
     	select 
  			t1.m_id  as menuId
 		from t_menu t1
  		inner join t_privilege t2 on t1.m_id = t2.p_mid
  		where t2.P_MASTER='role'  and t2.P_MASTERVALUE=#{roleId,jdbcType=VARCHAR}
   </select>
  <select id="selectPersonMenuIdByPersonId" parameterType="java.lang.String" resultMap="mMenu">
      SELECT T1.* FROM T_MENU T1 
      INNER JOIN T_PRIVILEGE T2 ON T1.M_ID = T2.P_MID
      WHERE T2.P_MASTER='role'  and t2.P_MASTERVALUE IN (SELECT R_ID FROM T_PERSON_ROLE WHERE P_ID =#{0} )
  </select>
</mapper>  